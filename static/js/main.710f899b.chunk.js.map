{"version":3,"sources":["images/logo.PNG","components/Status.js","components/ServiceBlock.js","components/HomePage.js","index.js"],"names":["module","exports","Status","nextProps","this","props","latency","statusBox","StatusBox","theme","background","href","rel","Label","name","Component","styled","div","p","ServiceBlock","keyVals","Object","entries","latencyMap","map","idx","key","BlockFormat","HomePage","endpoints","fetch","then","results","ok","console","log","statusText","json","data","setState","endpointNames","doLatencyChecks","latencyCheck","state","newUrl","handleChange","bind","handleSubmit","length","numSWPeople","catch","error","numGhibPeople","requestOptions","method","body","response","event","target","value","preventDefault","addNewUrl","interval","setInterval","clearInterval","listLength","endpointList","latencyCheckMap","Header","Logo","src","logo","alt","Title","Sub","Form","as","AdminPanel","onSubmit","InputGroup","MyFormGroup","FormControl","MyFormControl","type","onChange","placeholder","Append","Button","MyFormBtn","img","h1","h3","form","input","button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.710f899b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8d277a21.PNG\";","import React, {Component} from 'react'\nimport styled from 'styled-components'\n\nclass Status extends Component {\n\n\tshouldComponentUpdate(nextProps) {\n\t\treturn this.props.latency !== nextProps.latency;\n\t}\n\n\trender() {\n\t\tconst AVERAGE_PING = 100\n\t\tconst HIGH_PING = 200\n\t\tconst latency = this.props.latency;\n\t\tlet statusBox;\n\t\tif (latency < AVERAGE_PING) {\n\t\t\tstatusBox = <StatusBox theme={{background: \"#409920\"}}>{latency}ms</StatusBox>\n\t\t} else if (latency < HIGH_PING) {\n\t\t\tstatusBox = <StatusBox theme={{background: \"#999120\"}}>{latency}ms</StatusBox>\n\t\t} else {\n\t\t\tstatusBox = <StatusBox theme={{background: \"#994020\"}}>{latency}ms</StatusBox>\n\t\t}\n\t\treturn (\n\t\t<div>\n\t\t\t<link href='https://fonts.googleapis.com/css?family=Mulish' rel='stylesheet' />\n\t\t\t<div>\n\t\t\t\t<Label>{this.props.name}</Label>\n\t\t\t\t{statusBox}\n\t\t\t</div>\n\t\t</div>\n\t\t)\n\t}\n}\n\nconst StatusBox = styled.div`\n\tborder-style: groove;\n\tborder-width: 2px;\n\theight: 2em;\n\twidth: 20em;\n\tbackground-color: ${props => props.theme.background};\n    vertical-align: middle;\n\ttext-align: center;\n\tcolor: white;\n\tfont-family: 'Mulish';\n\tfont-weight: 100;\n\tmargin-left: 2em;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`\n\nconst Label = styled.p`\n\tdisplay: flex;\n\talign-items: center;\n\tfont-family: 'Mulish';\n\theight: 2em;\n\twidth: 5em;\n\tmargin: 0em;\n\tmargin-top: 1em;\n`\n\nexport default Status;\n","import React, {Component} from 'react'\r\nimport Status from './Status.js'\r\nimport styled from 'styled-components'\r\n\r\nclass ServiceBlock extends Component {\r\n\r\n\trender() {\r\n\t\tvar keyVals = Object.entries(this.props.latencyMap).map(([name, latency], idx) => {\r\n\t\t\treturn <Status key={idx} name={name} latency={latency} />\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<BlockFormat>\r\n\t\t\t\t {keyVals}\r\n\t\t\t</BlockFormat>\r\n\t\t)\r\n\t}\r\n}\r\n\t\t\r\n\r\nconst BlockFormat = styled.div`\r\n\tmargin-left: 0.5em;\r\n`\r\n\r\nexport default ServiceBlock","import React, {Component} from 'react'\r\nimport Head from 'next/head'\r\nimport ServiceBlock from './ServiceBlock.js'\r\nimport styled from 'styled-components'\r\nimport logo from '../images/logo.PNG'\r\nimport { Button, FormControl, Form, InputGroup } from 'react-bootstrap';\r\n\r\nclass HomePage extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tlatencyCheck: [],\r\n\t\t\tnewUrl: \"\"\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\t}\r\n\t\r\n    callPeopleServices() {\r\n        fetch('https://swapi.dev/api/people/?format=json')\r\n            .then(results => {\r\n                if (!results.ok) {\r\n                \tconsole.log(\"Failed getting swapi data: \" + results.statusText)\r\n                }\r\n                return results.json();\r\n            }).then(data => {\r\n                console.log(\"SWAPI data fetched; there are \" + data.results.length)\r\n                this.setState({ numSWPeople: data.results.length })\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n        fetch('https://ghibliapi.herokuapp.com/people/?format=json')\r\n            .then(results => {\r\n                if (!results.ok) {\r\n                \tconsole.log(\"Failed getting Ghibli data: \" + results.statusText)\r\n                }\r\n                return results.json();\r\n            }).then(data => {\r\n                console.log(\"Ghibli data fetched; there are \" + data.length)\r\n                this.setState({ numGhibPeople: data.length })\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\t}\r\n\t\r\n\tendpoints = () => {\r\n        fetch('/api/endpointNames')\r\n    \t\t.then(results => {\r\n                if (!results.ok) {\r\n                \tconsole.log(\"Failed getting endpoints data: \" + results.statusText)\r\n                }\r\n\t\t\t\treturn results.json()\r\n\t\t\t})\r\n            .then(data => {\r\n                this.setState({endpointNames: data})\r\n            })\r\n    }\r\n\t\r\n\tdoLatencyChecks = () => {\r\n        fetch('/api/latencyCheck')\r\n    \t\t.then(results => {\r\n                if (!results.ok) {\r\n                \tconsole.log(\"Failed getting endpoints data: \" + results.statusText)\r\n                }\r\n\t\t\t\treturn results.json()\r\n\t\t\t})\r\n            .then(data => {\r\n                this.setState({latencyCheck: data})\r\n            })\r\n    }\r\n\r\n\taddNewUrl() {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: this.state.newUrl\r\n    \t}\r\n\t\tfetch('/api/addendpoint', requestOptions).then(response => response.json())\r\n\t}\r\n\t\r\n\thandleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        }) \r\n    }\r\n    \r\n    handleSubmit(event) {\r\n\t\tevent.preventDefault()\r\n\t\tthis.addNewUrl()\r\n    }\r\n\r\n    componentDidMount() {\r\n\t\tthis.endpoints()\r\n\t\tthis.doLatencyChecks();\r\n\t\tthis.interval = setInterval(() => this.doLatencyChecks(), 5000)\r\n\t\tconsole.log(\"Page interval set to 5s\")\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n  \t\tclearInterval(this.interval)\r\n\t\tconsole.log(\"Page interval cleared\")\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tvar listLength = this.state != null && this.state.endpointList != null ? this.state.endpointNames.length : 0\r\n\t\tvar latencyCheckMap = this.state != null && this.state.latencyCheck != null ? this.state.latencyCheck : []\r\n\t\treturn (<div>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>Service Dash</title>\r\n\t\t\t\t<link href='https://fonts.googleapis.com/css?family=Mulish' rel='stylesheet' />\r\n\t\t\t</Head>\r\n\t\t\t<Header>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Logo src={logo} alt=\"Logo\"></Logo>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Title>Service Status Dash</Title>\r\n\t\t\t\t\t\t<Sub>Page refreshes every 5s {listLength > 0 ? '; There are ' + listLength + ' endpoints' : ''}</Sub>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ServiceBlock latencyMap={latencyCheckMap} />\r\n\t\t\t\t</div>\r\n\t\t\t</Header>\r\n\t\t\t<br />\r\n\t\t\t<Header>\r\n\t\t\t\t<Form as={AdminPanel} onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Title>Admin Panel</Title>\r\n\t\t\t\t\t<InputGroup as={MyFormGroup}>\r\n\t\t\t\t\t\t<FormControl as={MyFormControl}\r\n\t                        type=\"text\"\r\n\t                        name=\"newUrl\" \r\n\t                        value={this.state.newUrl}\r\n\t                        onChange={this.handleChange} \r\n\t                        placeholder=\"Add url to ping\" \r\n\t                    />\r\n                    \t<InputGroup.Append>\r\n\t\t\t\t\t    \t<Button as={MyFormBtn}>Add</Button>\r\n\t\t\t\t\t    </InputGroup.Append>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form>\r\n\t\t\t</Header>\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nconst Header = styled.div`\r\n\tline-height: 15px;\r\n    vertical-align: middle;\r\n\ttext-align: center;\r\n`\r\n\r\nconst Logo = styled.img`\r\n\tmargin: 1em;\r\n\tmax-width: 4em;\r\n    vertical-align: middle;\r\n`\r\n\t\r\nconst Title = styled.h1`\r\n\twidth: 95%;\r\n\tdisplay: inline-block;\r\n\tcolor: cornflowerblue;\r\n\tmargin-bottom: .2rem;\r\n\tfont-family: 'Mulish';\r\n\tfont-size: 2em;\r\n`\r\n\t\r\nconst Sub = styled.h3`\r\n\tdisplay: inline-block;\r\n\tcolor: #647eed;\r\n\tfont-family: 'Mulish';\r\n\tmargin: 0em;\r\n`\r\n\r\nconst AdminPanel = styled.form`\r\n\tbackground-color: pink;\r\n\tmargin: 1em;\r\n\twidth: 40%;\r\n`\r\n\r\nconst MyFormGroup = styled.div`\r\n\tmargin: 1em; \r\n\tmax-width: 95%;\r\n`\r\n\r\nconst MyFormControl = styled.input`\r\n\tmargin: 0.5em;\r\n`\r\n\r\nconst MyFormBtn = styled.button`\r\n\tmargin: 0.5em; \r\n`\r\n\r\nexport default HomePage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HomePage from './components/HomePage.js';\n\nReactDOM.render(\n\t<HomePage />, \n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}